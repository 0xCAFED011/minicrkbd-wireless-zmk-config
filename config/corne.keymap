/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>


#define QUICK_TAP_TERM 175
#define HRM_PRIOR_IDLE 150
#define HRM_TAPPING_TERM 280


&lt {
    quick-tap-ms = <QUICK_TAP_TERM>;
};

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <HRM_PRIOR_IDLE>;
            tapping-term-ms = <HRM_TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP_TERM>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                5  6  7  8  9
                15 16 17 18 19
                25 26 27 28 29
                33 34 35
            >; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <HRM_PRIOR_IDLE>;
            tapping-term-ms = <HRM_TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP_TERM>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                0  1  2  3  4
                10 11 12 13 14
                20 21 22 23 24
                      30 31 32
            >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        keymap {
            compatible = "zmk,keymap";

            // 0
            default_layer {
                display-name = "Base";
                bindings = <
    &kp Q        &kp W       &kp E       &kp R        &kp T    &kp Y &kp U         &kp I        &kp O       &kp P
    &hml LCTRL A &hml LALT S &hml LGUI D &hml LSHFT F &kp G    &kp H &hmr LSHFT J  &hmr LGUI K  &hmr LALT L &hmr LCTRL SQT
    &kp Z        &kp X       &kp C       &kp V        &kp B    &kp N &kp M         &kp COMMA    &kp DOT     &kp FSLH
                          &lt 3 CAPS &lt 2 BSPC &lt 1 SPACE    &lt 4 RET &lt 5 TAB &lt 6 ESC
                >;
            };

            // 1
            number_layer {
                display-name = "Number";
                bindings = <
    &none     &none    &none    &none     &none    &kp LBKT &kp N7 &kp N8 &kp N9 &kp RBKT
    &kp LCTRL &kp LALT &kp LGUI &kp LSHFT &none    &kp SEMI &kp N4 &kp N5 &kp N6 &kp EQUAL
    &none     &none    &none    &none     &none    &kp BSLH &kp N1 &kp N2 &kp N3 &kp GRAVE
                              &none &none &none    &kp MINUS &kp N0 &none
                >;
            };

            // 2
            navigation_layer {
                display-name = "Navigation";
                bindings = <
    &none     &none    &none    &none     &none    &kp HOME &kp PG_DN &kp PG_UP &kp END   &none
    &kp LCTRL &kp LALT &kp LGUI &kp LSHFT &none    &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &none
    &none     &none    &none    &none     &none    &none    &none     &none     &none     &none
                              &none &none &none    &none &none &none
                >;
            };

            // 3
            mouse_layer {
                display-name = "Mouse";
                bindings = <
    &none     &none    &none    &none     &none    &msc MOVE_LEFT &msc MOVE_DOWN &msc MOVE_UP &msc MOVE_RIGHT &none
    &kp LCTRL &kp LALT &kp LGUI &kp LSHFT &none    &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &none
    &none     &none    &none    &none     &none    &none          &none          &none        &none           &none
                              &none &none &none    &mkp LCLK &mkp MCLK &mkp RCLK
                >;
            };

            // 4
            media_layer {
                display-name = "Media";
                bindings = <
    &none      &kp C_BRI_DN &kp C_BRI_UP &none      &none    &none &none     &none    &none    &none
    &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &none    &none &kp LSHFT &kp LGUI &kp LALT &kp LCTRL
    &none      &none        &none        &none      &none    &none &none     &none    &none    &none
                                &kp C_MUTE &kp C_PP &none    &none &none &none
                >;
            };

            // 5
            function_layer {
                display-name = "Function";
                bindings = <
    &kp F9 &kp F10 &kp F11 &kp F12 &none    &none &none     &none    &none    &none
    &kp F5 &kp F6  &kp F7  &kp F8  &none    &none &kp LSHFT &kp LGUI &kp LALT &kp LCTRL
    &kp F1 &kp F2  &kp F3  &kp F4  &none    &none &none     &none    &none    &none
                       &none &none &none    &none &none &none
                >;
            };

            // 6
            keyboard_layer {
                display-name = "Keyboard";
                bindings = <
    &none        &none        &none        &none        &none           &none &none &none &none &none
    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &none &none &none &none &none
    &none        &none        &none        &none        &none           &none &none &none &none &none
                                              &none &bt BT_CLR &none    &none &none &none
                >;
            };
        };
    };
};
